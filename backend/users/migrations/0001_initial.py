# Generated by Django 5.2.3 on 2025-07-26 11:52

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, null=True)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('fitness_level', models.CharField(default='beginner', max_length=20)),
                ('fitness_goal', models.CharField(blank=True, choices=[('lose_weight', 'Lose Weight'), ('maintain', 'Maintain Physique'), ('gain_weight', 'Gain Weight')], max_length=20, null=True)),
                ('specific_goal', models.CharField(blank=True, choices=[('increase_strength', 'Increase Strength'), ('build_muscle', 'Build Muscle'), ('weight_loss', 'Weight Loss'), ('weight_gain', 'Weight Gain'), ('personal_training', 'Personal Training')], max_length=20, null=True)),
                ('has_completed_onboarding', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BodyComposition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_fat', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('muscle_mass', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('bone_mass', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('water_weight', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('bmr', models.PositiveIntegerField(blank=True, null=True)),
                ('visceral_fat', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('protein_mass', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('bmi', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('muscle_rate', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('metabolic_age', models.PositiveIntegerField(blank=True, null=True)),
                ('weight_without_fat', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('composition_image', models.ImageField(blank=True, null=True, upload_to='body_compositions/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='body_composition', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'body_compositions',
            },
        ),
        migrations.CreateModel(
            name='BodyMeasurements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chest', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('neck', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('waist', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('left_arm', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('right_arm', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('left_thigh', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('right_thigh', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('shoulders', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('hips', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('calves', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='current_measurements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'body_measurements',
            },
        ),
        migrations.CreateModel(
            name='GoalMeasurements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chest', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('neck', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('waist', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('left_arm', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('right_arm', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('left_thigh', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('right_thigh', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('shoulders', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('hips', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('calves', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('target_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='goal_measurements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'goal_measurements',
            },
        ),
    ]
